import pygame
pygame.init()

#makes the window
window = pygame.display.set_mode((1000,480))

#captions the window
pygame.display.set_caption('First Game')

Screenwidth = 1000
Screenheight = 480


# imports and defines all pictures in game
walkRight = [pygame.image.load('Game/falcoR1.png'), pygame.image.load('Game/falcoR1.png'), pygame.image.load('Game/falcoR1.png'), pygame.image.load('Game/falcoR1.png'), pygame.image.load('Game/falcoR1.png'), pygame.image.load('Game/falcoR1.png'), pygame.image.load('Game/falcoR1.png'), pygame.image.load('Game/falcoR1.png'), pygame.image.load('Game/falcoR1.png')]
walkLeft = [pygame.image.load('Game/falcoL1.png'), pygame.image.load('Game/falcoL1.png'), pygame.image.load('Game/falcoL1.png'), pygame.image.load('Game/falcoL1.png'), pygame.image.load('Game/falcoL1.png'), pygame.image.load('Game/falcoL1.png'), pygame.image.load('Game/falcoL1.png'), pygame.image.load('Game/falcoL1.png'), pygame.image.load('Game/falcoL1.png')]
standingLaser = [pygame.image.load('Game/falcoR2.png'), pygame.image.load('Game/falcoR3.png'), pygame.image.load('Game/falcoR4.png'), pygame.image.load('Game/falcoR5.png'), pygame.image.load('Game/falcoR6.png'), pygame.image.load('Game/falcoR7.png'), pygame.image.load('Game/falcoR8.png'), pygame.image.load('Game/falcoR9.png'), pygame.image.load('Game/falcoR10.png'), pygame.image.load('Game/falcoR11.png')]
standingLaserLeft = [pygame.image.load('Game/falcoL2.png'), pygame.image.load('Game/falcoL3.png'), pygame.image.load('Game/falcoL4.png'), pygame.image.load('Game/falcoL5.png'), pygame.image.load('Game/falcoL6.png'), pygame.image.load('Game/falcoL7.png'), pygame.image.load('Game/falcoL8.png'), pygame.image.load('Game/falcoL9.png'), pygame.image.load('Game/falcoL10.png'), pygame.image.load('Game/falcoL11.png')]
redLaser = [pygame.image.load('Game/redlaserSmall.png'),pygame.image.load('Game/redlaserMed.png'), pygame.image.load('Game/redlaser1.png')]
bg = pygame.image.load('Game/bg2.png')
char = pygame.image.load('Game/standing.png')


clock = pygame.time.Clock()

# define player class for all of our juicy variables
class player(object):
    def __init__(self, x, y, width, height):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.vel = 4
        self.isJump = False
        self.jumpCount = 0
        self.left = False
        self.right = False
        self.down = False
        self.walkCount = 0
        self.standing = True
        self.jumpSquat = False
        self.laserlag = 0
        self.unlockstandinglaser = False
        self.unlockaeriallaser = False
        self.turnonlandLeft = False
        self.turnonlandRight = False


    def draw(self, window):     #character draw method

        if self.unlockstandinglaser and self.right:         #draw standing laser right
            if self.laserlag >=0 and self.laserlag <= 3:
                window.blit(standingLaser[0], (self.x, self.y))
            if self.laserlag >=4 and self.laserlag <= 6:
                window.blit(standingLaser[1], (self.x, self.y))
            if self.laserlag >=7 and self.laserlag <= 9:
                window.blit(standingLaser[2], (self.x, self.y))
            if self.laserlag >=10 and self.laserlag <= 11:
                window.blit(standingLaser[3], (self.x, self.y))
            if self.laserlag >=12 and self.laserlag <= 13:
                window.blit(standingLaser[4], (self.x, self.y))
            if self.laserlag >=14 and self.laserlag <= 15:
                window.blit(standingLaser[5], (self.x, self.y))
            if self.laserlag >=16 and self.laserlag <= 17:
                window.blit(standingLaser[6], (self.x, self.y))
            if self.laserlag >=18 and self.laserlag <= 20:
                window.blit(standingLaser[7], (self.x, self.y))
            if self.laserlag >=21 and self.laserlag <= 22:
                window.blit(standingLaser[8], (self.x, self.y))
            if self.laserlag >=23 and self.laserlag <= 26:
                window.blit(standingLaser[9], (self.x, self.y))
            if self.laserlag >=27 and self.laserlag <= 30:
                window.blit(standingLaser[8], (self.x, self.y))
            if self.laserlag >=31 and self.laserlag <= 33:
                window.blit(standingLaser[7], (self.x, self.y))
            if self.laserlag >=34 and self.laserlag <= 36:
                window.blit(standingLaser[6], (self.x, self.y))
            if self.laserlag >=37 and self.laserlag <= 39:
                window.blit(standingLaser[5], (self.x, self.y))
            if self.laserlag >=40 and self.laserlag <= 42:
                window.blit(standingLaser[4], (self.x, self.y))
            if self.laserlag >=43 and self.laserlag <= 46:
                window.blit(standingLaser[3], (self.x, self.y))
            if self.laserlag >=47 and self.laserlag <= 49:
                window.blit(standingLaser[2], (self.x, self.y))
            if self.laserlag >=50 and self.laserlag <= 52:
                window.blit(standingLaser[1], (self.x, self.y))
            if self.laserlag >=53 and self.laserlag <= 56:
                window.blit(standingLaser[0], (self.x, self.y))

        elif self.unlockstandinglaser and self.left:              #draw stanidng laser left
            if self.laserlag >=0 and self.laserlag <= 3:
                window.blit(standingLaserLeft[0], (self.x, self.y))
            if self.laserlag >=4 and self.laserlag <= 6:
                window.blit(standingLaserLeft[1], (self.x, self.y))
            if self.laserlag >=7 and self.laserlag <= 9:
                window.blit(standingLaserLeft[2], (self.x, self.y))
            if self.laserlag >=10 and self.laserlag <= 11:
                window.blit(standingLaserLeft[3], (self.x, self.y))
            if self.laserlag >=12 and self.laserlag <= 13:
                window.blit(standingLaserLeft[4], (self.x, self.y))
            if self.laserlag >=14 and self.laserlag <= 15:
                window.blit(standingLaserLeft[5], (self.x, self.y))
            if self.laserlag >=16 and self.laserlag <= 17:
                window.blit(standingLaserLeft[6], (self.x, self.y))
            if self.laserlag >=18 and self.laserlag <= 20:
                window.blit(standingLaserLeft[7], (self.x, self.y))
            if self.laserlag >=21 and self.laserlag <= 22:
                window.blit(standingLaserLeft[8], (self.x, self.y))
            if self.laserlag >=23 and self.laserlag <= 26:
                window.blit(standingLaserLeft[9], (self.x, self.y))
            if self.laserlag >=27 and self.laserlag <= 30:
                window.blit(standingLaserLeft[8], (self.x, self.y))
            if self.laserlag >=31 and self.laserlag <= 33:
                window.blit(standingLaserLeft[7], (self.x, self.y))
            if self.laserlag >=34 and self.laserlag <= 36:
                window.blit(standingLaserLeft[6], (self.x, self.y))
            if self.laserlag >=37 and self.laserlag <= 39:
                window.blit(standingLaserLeft[5], (self.x, self.y))
            if self.laserlag >=40 and self.laserlag <= 42:
                window.blit(standingLaserLeft[4], (self.x, self.y))
            if self.laserlag >=43 and self.laserlag <= 46:
                window.blit(standingLaserLeft[3], (self.x, self.y))
            if self.laserlag >=47 and self.laserlag <= 49:
                window.blit(standingLaserLeft[2], (self.x, self.y))
            if self.laserlag >=50 and self.laserlag <= 52:
                window.blit(standingLaserLeft[1], (self.x, self.y))
            if self.laserlag >=53 and self.laserlag <= 56:
                window.blit(standingLaserLeft[0], (self.x, self.y))

        elif self.unlockaeriallaser and self.right:           # aerial laser right
            if self.laserlag >= 0 and self.laserlag <= 2:
                window.blit(standingLaser[0], (self.x, self.y))
            if self.laserlag >= 3 and self.laserlag <= 4:
                window.blit(standingLaser[1], (self.x, self.y))
            if self.laserlag == 5:
                window.blit(standingLaser[2], (self.x, self.y))
            if self.laserlag == 6:
                window.blit(standingLaser[3], (self.x, self.y))
            if self.laserlag == 7:
                window.blit(standingLaser[4], (self.x, self.y))
            if self.laserlag == 8:
                window.blit(standingLaser[5], (self.x, self.y))
            if self.laserlag == 9:
                window.blit(standingLaser[6], (self.x, self.y))
            if self.laserlag == 10:
                window.blit(standingLaser[7], (self.x, self.y))
            if self.laserlag == 11:
                window.blit(standingLaser[8], (self.x, self.y))
            if self.laserlag >=12 and self.laserlag <= 14:
                window.blit(standingLaser[9], (self.x, self.y))
            if self.laserlag >=15 and self.laserlag <= 17:
                window.blit(standingLaser[8], (self.x, self.y))
            if self.laserlag >=17 and self.laserlag <= 20:
                window.blit(standingLaser[8], (self.x, self.y))
            if self.laserlag >=21 and self.laserlag <= 24:
                window.blit(standingLaser[8], (self.x, self.y))
            if self.laserlag >=25 and self.laserlag <= 27:
                window.blit(standingLaser[8], (self.x, self.y))
            if self.laserlag >=28 and self.laserlag <= 30:
                window.blit(standingLaser[8], (self.x, self.y))
            if self.laserlag >=31 and self.laserlag <= 32:
                window.blit(standingLaser[8], (self.x, self.y))
            if self.laserlag == 33:
                window.blit(standingLaser[2], (self.x, self.y))
            if self.laserlag == 34:
                window.blit(standingLaser[1], (self.x, self.y))
            if self.laserlag == 35:
                window.blit(standingLaser[0], (self.x, self.y))

        elif self.unlockaeriallaser and self.left:                #aerial laser left
            if self.laserlag >= 0 and self.laserlag <= 2:
                window.blit(standingLaserLeft[0], (self.x, self.y))
            if self.laserlag >= 3 and self.laserlag <= 4:
                window.blit(standingLaserLeft[1], (self.x, self.y))
            if self.laserlag == 5:
                window.blit(standingLaserLeft[2], (self.x, self.y))
            if self.laserlag == 6:
                window.blit(standingLaserLeft[3], (self.x, self.y))
            if self.laserlag == 7:
                window.blit(standingLaserLeft[4], (self.x, self.y))
            if self.laserlag == 8:
                window.blit(standingLaserLeft[5], (self.x, self.y))
            if self.laserlag == 9:
                window.blit(standingLaserLeft[6], (self.x, self.y))
            if self.laserlag == 10:
                window.blit(standingLaserLeft[7], (self.x, self.y))
            if self.laserlag == 11:
                window.blit(standingLaserLeft[8], (self.x, self.y))
            if self.laserlag >=12 and self.laserlag <= 14:
                window.blit(standingLaserLeft[9], (self.x, self.y))
            if self.laserlag >=15 and self.laserlag <= 17:
                window.blit(standingLaserLeft[8], (self.x, self.y))
            if self.laserlag >=17 and self.laserlag <= 20:
                window.blit(standingLaserLeft[8], (self.x, self.y))
            if self.laserlag >=21 and self.laserlag <= 24:
                window.blit(standingLaserLeft[8], (self.x, self.y))
            if self.laserlag >=25 and self.laserlag <= 27:
                window.blit(standingLaserLeft[8], (self.x, self.y))
            if self.laserlag >=28 and self.laserlag <= 30:
                window.blit(standingLaserLeft[8], (self.x, self.y))
            if self.laserlag >=31 and self.laserlag <= 32:
                window.blit(standingLaserLeft[8], (self.x, self.y))
            if self.laserlag == 33:
                window.blit(standingLaserLeft[2], (self.x, self.y))
            if self.laserlag == 34:
                window.blit(standingLaserLeft[1], (self.x, self.y))
            if self.laserlag == 35:
                window.blit(standingLaserLeft[0], (self.x, self.y))




        else:

                            #draw standing bassed on last direction
            if self.left:
                window.blit(walkLeft[0], (self.x, self.y))
            elif self.right:
                window.blit(walkRight[0], (self.x, self.y))
            else:
                window.blit(walkRight[0], (self.x, self.y))

#projectle class plz
class projectile(object):
    def __init__(self,x,y ,facing):
        self.x = x
        self.y = y
        self.facing = facing
        self.vel = 10 * facing
        self.shootCount = 0
        self.laserSizeTimer = 0


    def draw(self, window):

            #pygame.draw.circle(window, self.color, (self.x, self.y), self.radius)
            if self.facing == -1:

                window.blit(redLaser[2], ((self.x - 64), self.y))

            else:

                window.blit(redLaser[2], (self.x , self.y))








#Draw function
def redrawGameWindow():
    window.blit(bg, (0,0))  #draw background
    falco.draw(window)
    for laser in lasers:
        laser.draw(window)

    pygame.display.update()



#character object creation
falco = player(300, 410, 64,64)


#main loop
letsbeslow = False
laserturnleft = False
laserturnright = False
pureleft = False
pureright = False
unlockmomentumleft = False
unlockmomentumright = False
run = True
lasers = []
while run:

    clock.tick(60) #60 frames (or goes of the main loop) per second

    if falco.unlockstandinglaser:                 # how we trigger and calculate laser starting lag
        falco.laserlag += 1
        if falco.laserlag == 23:
            lasers.append(projectile(round((falco.x + falco.width //2) + 5), round((falco.y + falco.height //2) + 5 ), facing ))
            print('yay i shot a laser')

        if falco.laserlag == 57:
            falco.unlockstandinglaser = False
            falco.laserlag = 0
            print('laser animation over')


    if falco.unlockaeriallaser:        #trigger aerial laser
        falco.laserlag += 1
        if falco.laserlag == 13:
            lasers.append(projectile(round((falco.x + falco.width //2) + 5), round((falco.y + falco.height //2) + 5 ), facing ))
            print('yay i shot a laser')

        if falco.laserlag == 35:
            falco.unlockaeriallaser = False
            falco.laserlag = 0
            print('laser animation over')


    for laser in lasers:
        if laser.x < 1000 and laser.x > 0:
            laser.x += laser.vel
        else:
            lasers.pop(lasers.index(laser))


    if falco.isJump & pureleft:      #retain running momentum when jumping
        unlockmomentumleft = True
    elif falco.isJump & pureright:
        unlockmomentumright = True

    if unlockmomentumright and falco.x < (Screenwidth - falco.width):
        if falco.isJump:
            falco.x = falco.x + falco.vel

    if unlockmomentumleft and falco.x > 0:
        if falco.isJump:
            falco.x = falco.x - falco.vel

    pureright = False
    pureleft = False



    for event in pygame.event.get():  #makes the x-out button work
        if event.type == pygame.QUIT:
            run = False


    keys = pygame.key.get_pressed() #creates list of keys for button pressed

    if keys[pygame.K_s]:     #down press for Fast Falling
        falco.down = True

    if keys[pygame.K_SPACE] and falco.laserlag == 0:       #shoots laser when space is pressed
        if laserturnleft:
            facing = -1
            falco.left = True
            falco.right = False
            falco.turnonlandLeft = True
        elif laserturnright:
            facing = 1
            falco.right = True
            falco.left = False
            falco.turnonlandRight = True
        elif falco.left:
            facing = -1
        else:
            facing = 1

        if not falco.isJump:
            falco.unlockstandinglaser = True
        if falco.isJump:
            falco.unlockaeriallaser = True

    if not falco.isJump:
        laserturnright = False
        laserturnleft = False


    if keys[pygame.K_a] and falco.x > 0:  #what to do when left is pressed
        if not falco.isJump and falco.laserlag == 0:
            falco.x = falco.x - falco.vel
            falco.left = True
            falco.right = False
            falco.standing = False
            pureleft = True
        if falco.isJump:
            if unlockmomentumleft:
                pass
            else:
                if letsbeslow:                                #allows aerial drift
                    falco.x = falco.x - ((falco.vel / 4))     #tilt
                else:
                    falco.x = falco.x - (falco.vel / 2)       #full tilt
            laserturnleft = True
            laserturnright = False


    elif keys[pygame.K_d] and falco.x < (Screenwidth - falco.width):  #what to do when right is pressed
        if not falco.isJump and falco.laserlag == 0:
            falco.x = falco.x + falco.vel
            falco.right = True
            falco.left = False
            falco.standing = False
            pureright = True
        if falco.isJump:
            if unlockmomentumright:
                pass
            else:
                if letsbeslow:                                 #allows aerial drift
                    falco.x = falco.x + ((falco.vel / 4) )     #tilt
                else:
                    falco.x = falco.x + (falco.vel / 2)        #full tilt
            laserturnright = True
            laserturnleft = False

    else:     #what to do when nothing is pressed
        falco.standing = True
        falco.walkCount = 0


    if keys[pygame.K_LSHIFT] :             #what to do when walk is pressed
        if not falco.isJump:
            falco.vel = 2
        if falco.isJump:
            letsbeslow = True
    else:
        falco.vel = 4
        letsbeslow = False



    if not (falco.isJump):   #if we are not jumping


        if keys[pygame.K_m] and falco.laserlag == 0:   #what to do when up is pressed
            falco.isJump = True
            falco.walkCount = 0


    else:                                     #calculating falco short hop
        if falco.jumpCount <= 6:                 # jump squat
            falco.jumpSquat = True
            falco.jumpCount += 1
            falco.turnonlandRight = False
            falco.turnonlandLeft = False
        elif falco.jumpCount > 6 and falco.jumpCount <= 16:      #going up
            falco.y -= 8
            falco.jumpCount += 1
            falco.jumpSquat = False
        elif falco.jumpCount == 17:         #apex height  of 80 from bottom
            falco.jumpCount +=1
            falco.down = False
        elif falco.jumpCount > 17 and falco.jumpCount <= 31:   #on the way down
            if falco.down:             #if we fast fall
                if falco.y > 402:
                    falco.y = 410
                    falco.jumpCount = 32
                else:
                    falco.y += ((60/7) * 1.29 )         # + (100/14 * .129)) is real falco FF rate
                    print('fast fall initiated' + str(falco.jumpCount))
            else:


                if falco.jumpCount == 18 or falco.jumpCount == 19:
                    falco.y += 1
                if falco.jumpCount == 20 or falco.jumpCount == 21:
                    falco.y += 2
                if falco.jumpCount == 22 or falco.jumpCount == 23:
                    falco.y += 3
                if falco.jumpCount == 24 or falco.jumpCount == 25:
                    falco.y += 4
                if falco.jumpCount > 25:
                    falco.y += (60/6)

            falco.jumpCount += 1


                    #if falco.y == 410   we are on the ground

        else:      #what to do upon landing
            falco.isJump = False
            falco.jumpCount = 0
            unlockmomentumright = False
            unlockmomentumleft = False
            if falco.unlockaeriallaser:
                falco.laserlag = 0
            falco.unlockaeriallaser = False
            if falco.turnonlandLeft:
                falco.left = True
                falco.right = False
            if falco.turnonlandRight:
                falco.left = False
                falco.right = True


    if not falco.left and not falco.right:
        falco.right = True
    redrawGameWindow()   # calls the big draw function






pygame.quit()  #kills code when loop ends
